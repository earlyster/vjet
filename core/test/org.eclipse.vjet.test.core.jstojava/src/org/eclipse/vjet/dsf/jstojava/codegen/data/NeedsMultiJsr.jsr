package org.ebayopensource.dsf.jstojava.codegen.data;

import org.ebayopensource.dsf.aggregator.jsref.JsObj;
import org.ebayopensource.dsf.aggregator.jsref.internals.JsCmpMeta;
import org.ebayopensource.dsf.aggregator.jsref.JsTypeRef;
import org.ebayopensource.dsf.aggregator.jsref.JsObjData;
import org.ebayopensource.dsf.spec.component.IComponentSpec;
import org.ebayopensource.dsf.resource.pattern.js.JsResource;
import org.ebayopensource.dsf.resource.pattern.js.IJsResourceRef;
import v4.vjo.rt.simple.AJsr;
import v4.vjo.rt.simple.BJsr;

@org.ebayopensource.dsf.resource.utils.CodeGen("JsrGenerator")
public class NeedsMultiJsr extends JsObj {
    private static final long serialVersionUID = 1L;

    private static final JsObjData S = 
        new JsObjData("org.ebayopensource.dsf.jstojava.codegen.data.NeedsMulti", NeedsMultiJsr.class, "NeedsMulti");

    
    public static class ResourceSpec {
        public static IComponentSpec getInstance() {
            return S.getResourceSpec(); 
        }
        public static final JsResource RESOURCE = S.getJsResource();
        public static final IJsResourceRef REF = S.getJsResourceRef();
    }

    public static final IComponentSpec SPEC = S.getResourceSpec()
        .addDependentComponent(AJsr.ResourceSpec.getInstance())
        .addDependentComponent(BJsr.ResourceSpec.getInstance());

    public NeedsMultiJsr(){
        super(S.getJsCmpMeta(), true);
    }

    protected NeedsMultiJsr(JsCmpMeta cmpMeta, boolean isInstance, Object... args) {
        super(cmpMeta, isInstance, args);
    }
    
    public static JsTypeRef<NeedsMultiJsr> prototype = new JsTypeRef<NeedsMultiJsr>(S);
}