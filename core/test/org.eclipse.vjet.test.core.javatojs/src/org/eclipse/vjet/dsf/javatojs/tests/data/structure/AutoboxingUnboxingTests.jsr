package org.ebayopensource.dsf.javatojs.tests.data.structure;

import org.ebayopensource.dsf.aggregator.jsref.JsFunc;
import org.ebayopensource.dsf.common.binding.IValueBinding;
import org.ebayopensource.dsf.aggregator.jsref.JsObj;
import org.ebayopensource.dsf.aggregator.jsref.JsProp;
import org.ebayopensource.dsf.jsruntime.jsref.IJsPropSetter;
import org.ebayopensource.dsf.aggregator.jsref.internals.JsCmpMeta;
import org.ebayopensource.dsf.aggregator.jsref.JsTypeRef;
import org.ebayopensource.dsf.aggregator.jsref.JsObjData;
import org.ebayopensource.dsf.spec.component.IComponentSpec;
import org.ebayopensource.dsf.resource.pattern.js.JsResource;
import org.ebayopensource.dsf.resource.pattern.js.IJsResourceRef;
import vjo.java.lang.IntegerJsr;
import vjo.java.lang.LongJsr;
import vjo.java.lang.DoubleJsr;
import vjo.java.lang.CharacterJsr;
import vjo.java.lang.ShortJsr;

@org.ebayopensource.dsf.resource.utils.CodeGen("JsrGenerator")
public class AutoboxingUnboxingTestsJsr extends JsObj {
    private static final long serialVersionUID = 1L;

    private static final JsObjData S = 
        new JsObjData("org.ebayopensource.dsf.javatojs.tests.data.structure.AutoboxingUnboxingTests", AutoboxingUnboxingTestsJsr.class, "AutoboxingUnboxingTests", true);

    
    public static class ResourceSpec {
        public static IComponentSpec getInstance() {
            return S.getResourceSpec(); 
        }
        public static final JsResource RESOURCE = S.getJsResource();
        public static final IJsResourceRef REF = S.getJsResourceRef();
    }

    public static final IComponentSpec SPEC = S.getResourceSpec()
        .addDependentComponent(IntegerJsr.ResourceSpec.getInstance())
        .addDependentComponent(LongJsr.ResourceSpec.getInstance())
        .addDependentComponent(DoubleJsr.ResourceSpec.getInstance())
        .addDependentComponent(CharacterJsr.ResourceSpec.getInstance())
        .addDependentComponent(ShortJsr.ResourceSpec.getInstance());

    public AutoboxingUnboxingTestsJsr(){
        super(S.getJsCmpMeta(), true);
    }

    protected AutoboxingUnboxingTestsJsr(JsCmpMeta cmpMeta, boolean isInstance, Object... args) {
        super(cmpMeta, isInstance, args);
    }

    public static JsProp<IntegerJsr> k(){
        return getProp(S, IntegerJsr.class, "k");
    }

    public static IJsPropSetter k(IntegerJsr v) {
        return setProp(S, "k", v);
    }

    public static IJsPropSetter k(IValueBinding<? extends IntegerJsr> v) {
        return setProp(S, "k", v);
    }

    public static JsProp<IntegerJsr> m(){
        return getProp(S, IntegerJsr.class, "m");
    }

    public static IJsPropSetter m(IntegerJsr v) {
        return setProp(S, "m", v);
    }

    public static IJsPropSetter m(IValueBinding<? extends IntegerJsr> v) {
        return setProp(S, "m", v);
    }

    public JsFunc<Void> autoBoxing(){
        return call("autoBoxing");
    }

    public JsFunc<Void> autoUnboxing(){
        return call("autoUnboxing");
    }

    public static class GenericJsr<T> extends JsObj {
        private static final long serialVersionUID = 1L;

        private static final JsObjData S = 
            new JsObjData("org.ebayopensource.dsf.javatojs.tests.data.structure.AutoboxingUnboxingTests.Generic", GenericJsr.class, "AutoboxingUnboxingTests");

        public GenericJsr(){
            super(S.getJsCmpMeta(), true);
        }

        protected GenericJsr(JsCmpMeta cmpMeta, boolean isInstance, Object... args) {
            super(cmpMeta, isInstance, args);
        }

        public JsFunc<? extends T> get(){
            return call((Class<T>)null, "get");
        }

        public JsFunc<Void> set(T t){
            return call("set").with(t);
        }

        public JsFunc<Void> set(IValueBinding<? extends T> t){
            return call("set").with(t);
        }
        
        public static JsTypeRef<GenericJsr> prototype = new JsTypeRef<GenericJsr>(S);
    }
    
    public static JsTypeRef<AutoboxingUnboxingTestsJsr> prototype = new JsTypeRef<AutoboxingUnboxingTestsJsr>(S);
}